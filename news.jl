using HTTP,DataFrames,Dates,XML,EzXML,Weave,SQLite,CSV
using Downloads: download

function weaving(OutFolder,File,OutSelect)
    filename = File
    doct = ["pandoc","md2html","md2tex","pandoc2pdf","md2pdf"] 
    docTo = doct[OutSelect]
    #println("weave($filename; doctype = $docTo, out_path = $OutFolder)")
    weave(filename; doctype = docTo, out_path = OutFolder)
end

function FileLog(Filename::String,logme::String) #not using traditional logging because this is not log
    logme =logme *"\r\n" #add return 
    io =  open(Filename, "w"; lock = true) # "a+" is append this will add to the file  
    write(io,logme) #add log 
    close(io);lock = false #must close for efficiency
end

function chinese(year::Int)
    pinyin = Dict("Áî≤" => "Í∞ë","‰πô" => "ÏùÑ","‰∏ô" => "Î≥ë","‰∏Å" => "Ï†ï","Êàä" => "Î¨¥","Â∑±" => "Í∏∞","Â∫ö" => "Í≤Ω","Ëæõ" => "Ïã†","Â£¨" => "ÏûÑ","Áô∏" => "Í≥Ñ","Â≠ê" => "Ïûê","‰∏ë" => "Ï∂ï","ÂØÖ" => "Ïù∏","ÂçØ" => "Î¨ò","Ëæ∞" => "ÏßÑ","Â∑≥" => "ÏÇ¨","Âçà" => "Ïò§","Êú™" => "ÎØ∏","Áî≥" => "Ïã†","ÈÖâ" => "Ïú†","Êàå" => "Ïà†","‰∫•" => "Ìï¥")
    elements    = ["Î™©(Ï≤≠ÏÉâ)", "Ìôî(Ï†ÅÏÉâ)", "ÌÜ†(Ìô©ÏÉâ)", "Í∏à(Î∞±ÏÉâ)", "Ïàò(ÌùëÏÉâ)"]
    animals     = ["Ï•ê(üê≠)", "ÏÜå(üêÇ)", "Î≤î(üêØ)", "ÌÜ†ÎÅº(üêá)", "ÎìúÎûòÍ≥§(üêâ)", "Î±Ä(üêç)", "Îßê(üê¥)", "Ïñë(üêè)", "ÏõêÏà≠Ïù¥(üêµ)", "Îã≠(üêî)", "Í∞ú(üê∂)", "ÎèºÏßÄ(üê∑)"]
    celestial   = ["Áî≤", "‰πô", "‰∏ô", "‰∏Å", "Êàä", "Â∑±", "Â∫ö", "Ëæõ", "Â£¨", "Áô∏"]
    terrestrial = ["Â≠ê", "‰∏ë", "ÂØÖ", "ÂçØ", "Ëæ∞", "Â∑≥", "Âçà", "Êú™", "Áî≥", "ÈÖâ", "Êàå", "‰∫•"]
    aspects     = ["Ïñë(+)", "Ïùå(-)"]
    base = 4

    cycleyear = year - base

    stemnumber = cycleyear % 10 + 1
    stemhan    = celestial[stemnumber]
    stempinyin = pinyin[stemhan]

    elementnumber = div(stemnumber, 2) + 1
    element       = elements[elementnumber]

    branchnumber = cycleyear % 12 + 1
    branchhan    = terrestrial[branchnumber]
    branchpinyin = pinyin[branchhan]
    animal       = animals[branchnumber]

    aspectnumber = cycleyear % 2 + 1
    aspect       = aspects[aspectnumber]

    index = cycleyear % 60 + 1

    return "$year ÎÖÑ [$stemhan$branchhan] Âπ¥ ($stempinyin$branchpinyin ÎÖÑ, $element $animal; $aspect Ïùò Ìï¥ ÏùòÎ©∞ Ïú°Ïã≠Í∞ëÏûêÏùò $index Î≤àÏß∏ Ìï¥)"
end

function getmynews(htp,upcut,downcut)
    r = HTTP.request("GET", htp; retries=2, cookies=true)
    X = String(r.body)
    X = split(X,upcut)
    Y = split(X[2],downcut)
    return Y[1]
end

function Leftnews()
    MyString = []

    htp  = "https://www.hani.co.kr/rss/"
    r = HTTP.request("GET", htp; retries=2, cookies=true)
    doc = parsexml(String(r.body))
    channel = root(doc) 
    cnt = 0
    for item in eachelement(channel)
        for title in eachelement(item)
            cnt +=1
            title_name = nodecontent(title)  # or `species.content`
            if (cnt == 6 )
                push!(MyString,"ÏµúÍ∑º Îâ¥Ïä§: ÌïúÍµ≠ÏãúÍ∞Ñ (",title_name, ")","\n")
            elseif (cnt > 6 )
                title_name = replace(title_name,"nowrap></td></tr></table>"=>"\n\t\t\t\t")
                mtitle = split(title_name,"\n\t\t\t\t")
                popat!(mtitle,4)
                popfirst!(mtitle)
                (length(mtitle) <= 4) ? continue :
                clearstr = (length(mtitle)==5) ? string(mtitle[5], "‚ûñ","\t[",mtitle[1],"]","(",mtitle[2],")","\n üìñ[ ",mtitle[3], "üí¨@",mtitle[4],"\n") : string(mtitle[6],"‚ûñ","\t[",mtitle[1],"]","(",mtitle[2],")","\n##### \tüìç",mtitle[5],"\n###### üìñ ",mtitle[3], "üí¨@",mtitle[4],"\n") 
                clearstr = replace(clearstr, r"<.+?>"=> "", r"&.+?;"=> "","\n\t\t"=>"")
                #clearstr = replace(clearstr,"<br />"=>" ","&amp;lt;"=>" ","&amp;gt;"=>" ","</span>"=>" ","""<span style="color: #c21a1a;">"""=>" ","<span>"=>" ","\n\t\t"=>"")
                clearstr = replace(clearstr,"Í≤ΩÏ†ú‚ûñ"=>"Í≤ΩÏ†ú(üìä)‚ûñ","ÏÇ¨Ìöå‚ûñ"=>"ÏÇ¨Ìöå(üåà)‚ûñ","Ï†ïÏπò‚ûñ"=>"Ï†ïÏπò(üé¥)‚ûñ","Íµ≠Ï†ú‚ûñ"=>"Íµ≠Ï†ú(üåê)‚ûñ","Ï†ÑÍµ≠‚ûñ"=>"Ï†ÑÍµ≠(üåè)‚ûñ","Î¨∏Ìôî‚ûñ"=>"Î¨∏Ìôî(üé¨)‚ûñ","Ïä§Ìè¨Ï∏†‚ûñ"=>"Ïä§Ìè¨Ï∏†(üèÑ)‚ûñ","English Edition‚ûñ"=>"Eng.(üî†)‚ûñ","Ïï†ÎãàÎ©ÄÌîºÌîå‚ûñ"=>"Î∞òÎ†§ÎèôÎ¨º(üê≥)‚ûñ")
                #clearstr = replace(clearstr,"""<span style="color:"""=>" ",""";">"""=>" ")
                push!(MyString,string("\n#### \t üìå",clearstr))
            end
        end
    end
    return join(MyString)
end

function DevHTML()
    ÏßÄÍ∏à = Date(today())
    ÌòÑÏû¨ = Time(now())
    Now = string(Dates.now())
    clearstr = replace(Now,"-"=>"`",":"=>"`","T"=>"`","."=>"`")
    T1 = split(clearstr,"`")
    Myday =  string(T1[1],T1[2],T1[3],T1[4],T1[5],T1[6])

    Mstr ="""
    \n
    ## („Å•Ôø£ 3Ôø£)„Å• \tÏû¨Ïô∏ÎèôÌè¨(Âú®Â§ñÂêåËÉû) Ï†ïÎ≥¥ÏßÄ(‰ø°ÊÅØÂàäÁâ©) \t‚úç(‚óî‚ó°‚óî)üòò
    ----------------------------
    """
    ML = "$Myday.jmd"
    Mstr *= string("#### ", chinese(Dates.year(ÏßÄÍ∏à)))
    Mstr *= string("\n##### Ï§ëÍµ≠ÏãúÍ∞Ñ ÏúºÎ°ú :",(Dates.month(ÏßÄÍ∏à)),"Ïõî ",(Dates.day(ÏßÄÍ∏à)),"Ïùº,  ", Dates.hour(ÌòÑÏû¨),"Ïãú", Dates.minute(ÌòÑÏû¨),"Î∂ÑÏóê Ïû¨Ïô∏ÎèôÌè¨Î∂ÑÎì§Ïù¥ Î≥¥Í∏∞ÏâΩÍ≤å ÏûêÎèôÏúºÎ°ú Í∏ÅÏñ¥Î™®Ïùå\n")

    Mstr *= Leftnews()
    Mstr *= """

    ----------------------------
    ###     Ï£ºÏöî Ïù¥ÏäàÎì§
    ----------------------------
    """
    htp  = "https://quicknews.co.kr/"
    upcut = "Í∞ÑÏ∂îÎ¶∞ ÏïÑÏπ®Îâ¥Ïä§ÏûÖÎãàÎã§."
    downcut = "Ï∂úÏ≤òÍ∞ÑÏ∂îÎ¶∞ ÏïÑÏπ®Îâ¥Ïä§"
    Mstr *= replace(getmynews(htp,upcut,downcut),"‚óè "=>"* ")

    upcut = "Ï£ºÏöîÍ≤ΩÏ†úÏßÄÌëú"
    downcut = "Îß§Ïùº ÏïÑÏπ® Í∞ÑÏ∂îÎ¶∞Îâ¥Ïä§"
    Mstr *= """----------------------------
    ###      Í≤ΩÏ†úÏßÄÌëú
    """
    Mstr *= replace(getmynews(htp,upcut,downcut),"‚óè "=>"* ","52Ï£º"=>"\t+ 52Ï£º","     "=>"###     ")

    Mstr *= """----------------------------
    ###      ÌôòÏú®Ìëú
    ----------------------------
    """

    htp  = "https://search.naver.com/search.naver?query=%ED%99%98%EC%9C%A8&ie=utf8&sm=whl_nht"
    upcut = "</caption>"
    downcut = "</tr> </tbody> </table> </div> </div>"
    B = replace(getmynews(htp,upcut,downcut),"""<span class="ico">"""=>"<span>")
    Z = split(B,"<span>")
    C = []
    for i in 1:length(Z)
        A = split(Z[i],"<")
        push!(C,A[1])
    end 
    for i in 1:5
    popfirst!(C)
    end
    str = string("|Íµ≠Í∞Ä|ÌôòÏú®|Ï†ÑÏùºÎåÄÎπÑ|ÌçºÏÑºÌä∏|\n")
    str *= string("|:--:|:--:|:--:|:--:|\n")

    for i in 1:4:(length(C))
        Tc = (parse(Float64, replace(strip(C[i+1], [' ', ',', '\n']),","=>"")))  
        str *= string("|$(C[i])|$(Tc)|$(C[i+2])|$(C[i+3])|\n")
    end

    Mstr *= str

    initial  = """
    \n---
    ##### E-mailüìß: [jaewoo.joung@outlook.com](mailto:jaewoo.joung@outlook.com)
    ##### Mobileüì±:+86-130-6582-6195
    """

    Mstr *= initial

    FileLog(ML,Mstr)
    Tfolder = "..\\markdown\\"
    #Tfolder = "C:\\Users\\jaewo\\Documents\\myproj\\markdown\\"
    # OtSlc = 4 #1:"markdown",2:"md2html",3:"md2tex",4:"pandoc2pdf",5:"md2pdf"] 
    for OtSlc in 1:2
        (OtSlc == 3) ? nothing : weaving(Tfolder,ML,OtSlc)
    end
    
    #push!(RtnVal,jmdname)
    return T1
end
function SQLIntfce(T1)
    Myday =  string(T1[1],T1[2],T1[3],T1[4],T1[5],T1[6])
    dbname = "D:\\project\\NewsFeed.db" #static
    myresult = "D:\\project\\NewsQL.csv"
    db = SQLite.DB(dbname)
    crtdb = (db,tbname,tbschma) -> SQLite.execute(db, "CREATE TABLE IF NOT EXISTS $tbname($tbschma)")
    sqlinsrt = (db,tbname,tbvalue) -> SQLite.execute(db, "INSERT INTO $tbname VALUES($tbvalue)") 
    exec = (db,mystr) -> DBInterface.execute(db, mystr) #execdb(db) to excute quick
    
    tbschma = "HTML REAL"
    tbname = "TDate"
    crtdb(db,tbname,tbschma)
    println("created")
    tbname = "TDate";tbschma = "'$Myday.html'"
    sqlinsrt(db,tbname,tbschma)
    println("inserted")
    
    myStr = "SELECT * FROM $tbname ORDER BY HTML DESC"
    r = exec(db, myStr) #DBInterface.execute(db, myStr)
    CSV.write(myresult, r)# should be getting it with dataframe 
    df = CSV.read(myresult,DataFrame)
    println(df)
    return T1,df
end

TX,dfX= SQLIntfce(DevHTML())

println(TX,"\n",dfX)